# Graphical display - An

TO DOS LIST



Day 1 20/9/20222 - Display isometric grid
    
    1> Display cartesian grid #COMPLETED
        > Create cartesian coordination of 4 vertices of each tile
        > Draw each tile by using pygame.draw.rect function

    2> Display isometric grid #COMPLETED
        > Convert cartesian coordination of 4 vertices of each tile into new coordination for isometric map
        > Draw rhombus by using pygame.draw.polygon function



Day 2 24/9/2022 - Blit graphical object on the grid

    1> Blit default surface (default block like grass block) #COMPLETED

    2> Blit tree and rock #COMPLETED
        > For each tile generate randomly a number
        > Blit tree or rock or none depends on this number


Day 3  3/10/2022 - Extending our world, Camera, check FPS

    1> Display FPS    #COMPLETED
        > Draw current fps on the top left of screen
            Create "draw_text" function in utils module in game module this func takes "text" as a argument to be displayed
            Import this function to game module in draw function and pass the current fps using clock to this func

    2> Map controller #COMPLETED
        > Move map based on mouse's position and arrow key event
            > Detect mouse's position and key event
            > Update the camera position and return it to reuse when we blit default surface
            > Update the coordination in which we blit the default surface on screen

    3> extend our map #COMPLETED
        > increase number of tile in x-axis and y-axis
        > increase width and height of the default surface based on number of tile on x-axis and y-axis

    3> Deal with fps drop down #COMPLETED
        > the reason for fps drops down
            > Update everything will lead to fps drop down
              -> need to determine what is constant in the game: in our case this is default_surface 

        > Fix it
            > Use convert() and convert_alpha()

    4> Reallocating tree and rock in map
        > Using "Perlin Noise" algorithm to generate randomly natural Map

            Perlin Noise is an algorithm that is frequently used for creating terrain that looks natural
            